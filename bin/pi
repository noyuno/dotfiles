#!/bin/bash -e

. $HOME/dotfiles/bin/dffunc

declare user=noyuno
declare domain=noyuno.space
declare rootdomain=noyuno.space
declare gitdomain=git2.$rootdomain
declare domain2=noyuno.mydns.jp
declare mail=noyuno@$domain
declare pdata=/var/postgresql/data
declare showterm=/var/www/showterm
declare base=server
declare gittarget=/mnt/karen/git
declare gituser=git
declare leno=$(cat /home/noyuno/dotfiles/server/letsencrypt-no)
declare package=(
    oracle-java8-jdk nginx fcgiwrap postgresql \
        php php-pgsql php-gd php-fpm php-curl \
        rrdtool perl libwww-perl libmailtools-perl libmime-lite-perl \
        librrds-perl libdbi-perl libxml-simple-perl libhttp-server-simple-perl \
        libconfig-general-perl libio-socket-ssl-perl etckeeper jq)
declare certdomain="
        -d $domain
        -d dir.$domain
        -d git.$domain
        -d git2.$domain
        -d status.$domain
        -d www.$domain
        -d mail.$domain
        -d v.$domain
        -d s.$domain
        "
declare certfile="
    ssl_certificate /etc/letsencrypt/live/$rootdomain-$leno/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$rootdomain-$leno/privkey.pem;
"
declare certdir="
    location ~ /.well-known/acme-challenge/ {
        root /var/www/cert/;
    }
"
declare upgrade="
    $certdir
    location / {
        return 301 https://\$host\$request_uri;
    }
"

declare usage=

. $HOME/dotfiles/$base/general.sh
. $HOME/dotfiles/$base/network.sh
. $HOME/dotfiles/$base/gitbucket.sh
. $HOME/dotfiles/$base/kanboard.sh
. $HOME/dotfiles/$base/localnet.sh
. $HOME/dotfiles/$base/netdata.sh
. $HOME/dotfiles/$base/nginx.sh
. $HOME/dotfiles/$base/anime.sh
. $HOME/dotfiles/$base/showterm.sh
. $HOME/dotfiles/$base/vuls.sh
. $HOME/dotfiles/$base/nodejs.sh
. $HOME/dotfiles/$base/python.sh
. $HOME/dotfiles/$base/jma.sh
. $HOME/dotfiles/$base/systemd.sh
. $HOME/dotfiles/$base/mail.sh
. $HOME/dotfiles/$base/slack.sh
. $HOME/dotfiles/$base/display.sh
. $HOME/dotfiles/$base/disk.sh
. $HOME/dotfiles/$base/owncloud.sh
. $HOME/dotfiles/$base/backup.sh
. $HOME/dotfiles/$base/pleroma.sh
. $HOME/dotfiles/$base/cert.sh

help()
{
    cat << EOF
pi: Raspberry Pi tools
$usage
EOF
    exit 1
}

if [ "$(lsb_release -is)" != "Raspbian" ]; then
    echo "this command is Raspbian only" 1>&2
    exit 1
fi

if [ $# -eq 0 ]; then
    help
fi

if [ "$1" = "install" ]; then
    ainstall
    motd
    timezone
    network
    ssl
    nginx
    psql
    gitbucket_psql
    kanboard_psql
    gitbucket
    gitbucket_nginx
    kanboard
    kanboard_nginx
    netdata
    netdata_conf
    netdata_nginx
    zeroconf
    pychromecast
    ddns
    anime
    showterm
    showterm_conf
    showterm_nginx
    cve
    vuls
else
    eval $*
fi

