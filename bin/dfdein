#!/bin/bash -e

. "$HOME/dotfiles/bin/dffunc"

max_process=5
process=/tmp/dfdein.$RANDOM
waittime=0.1
echo 0 > $process

clone()
{
    cache=$1
    i=$2
    echo $((`cat $process`+1)) >$process
    echo -n "["$((`cat $process`+1))"] "
    dfout3 "clone $i"
    mkdir -p "$cache/$(dirname $i)"
    git clone -q --depth 1 "https://github.com/$i" "$cache/$i"
    echo $((`cat $process`-1)) >$process
}

pull()
{
    cache=$1
    i=$2
    echo $((`cat $process`+1)) >$process
    echo -n "["$((`cat $process`+1))"] "
    dfout3 "pull $i"
    pushd "$cache/$i" >/dev/null
        git pull -q --depth 1 &&:
        if [ $? -ne 0 ]; then
            dfwarn "conflict $i, removing and cloning"
            pushd .. >/dev/null
                trash $(basename $i)
                git clone -q --depth 1 "https://github.com/$i" "$cache/$i"
            popd >/dev/null
        fi
    popd >/dev/null
    echo $((`cat $process`-1)) >$process
}

idein()
{
    check_ret=0
    cache="$HOME/.cache/dein/repos/github.com"
    grep "$HOME/dotfiles/vim/rc/$1" -e '^repo\s=\s' | \
        sed -e "s/#.*//g" -e "s/repo\s=\s//g" -e "s/'//g" > "$DFTMP/data"
    while read i; do
        sleep $waittime
        if [ ! -d "$cache/$i" ]; then
            while [ $(cat $process) -ge $max_process ]; do
                sleep $waittime
            done
            clone $cache $i &
            check_ret=$((check_ret + 1))
        else
            while [ $(cat $process) -ge $max_process ]; do
                sleep $waittime
            done
            pull $cache $i &
        fi
    done < "$DFTMP/data"
    total=$((total + check_ret))
}

declare -A users
total=0
overview()
{
    cache="$HOME/.cache/dein/repos/github.com"
    grep "$HOME/dotfiles/vim/rc/$1" -e '^repo\s=\s' | \
        sed -e "s/#.*//g" -e "s/repo\s=\s//g" -e "s/'//g" > "$DFTMP/data"
    while read i; do
        user=$(dirname $i)
        users[$user]=$((${users[$user]}+1))
        total=$((total + 1))
    done < "$DFTMP/data"
}

if [ $# -eq 1 ]; then
    case "$1" in
        overview)
            overview dein.toml
            overview deineo.toml
            overview deinfile.toml
            overview deinlazy.toml
            dfout3 "$total plugins registred"
            (
            for i in ${!users[@]}; do
                echo "${users[$i]} ${i}"
            done
            ) | sort -fk2 | sort -snrk1 | grep -v '^1\s' | column -t
            ;;
        *)
            echo "$1 Didn't match anything" >&2
            exit 1
    esac
else
    idein dein.toml
    idein deineo.toml
    idein deinfile.toml
    idein deinlazy.toml
fi

wait

