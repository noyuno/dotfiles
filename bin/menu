#!/bin/bash -e

cache="$HOME/.cache/menu"
dir="/usr/share/applications"
nocat="Uncategorized"

build()
{
    if [ ! "$cache" ]; then
        return
    fi
    if [ -d "$cache" ]; then
        rm -rf "$cache"
    fi
    echo "building"
    for f in $(find "$dir" -type f -name "*.desktop"); do
        #echo $f
        for i in $(seq `grep -ce "^Name=" < "$f"`); do
            name=$(grep -e "^Name=" < "$f" | awk -F= '{gsub("/", "_", $2); print $2}' | awk "NR==$i")
            ex="#!/bin/sh -e
"$(grep -e "^Exec=" < "$f" | awk "NR==$i" | \
            awk -F= '{gsub("%u", "$*", $2); gsub("%U", "$*", $2); print $2}')
            cat=($(grep -e "^Categories=" < "$f" |
                awk -F= '{print $2}' |
                awk -F\; 'BEGIN {FS=";"; OFS=" "} {for(i=1;i<=NF;i++){print $i}}'))
            if [ "$cat" ]; then
                for e in ${cat[@]}; do
                    if [ ! -d "$cache/$e" ]; then
                        mkdir -p "$cache/$e"
                    fi
                    echo "$ex" > "$cache/$e/$name"
                    chmod +x "$cache/$e/$name"
                done
            else
                if [ ! -d "$cache/$nocat" ]; then
                    mkdir -p "$cache/$nocat"
                fi
                echo "$ex" > "$cache/$nocat/$name"
                chmod +x "$cache/$nocat/$name"
            fi
        done
    done
}

if [ "$1" = "-b" -o ! -d "$cache" ]; then
    build
elif [ "$1" = "-h" ]; then
    cat << EOF
menu [-b]

-b: build
EOF
    exit 1
fi
rm -f /tmp/menu.choose
ranger "$cache" --choosefile=/tmp/menu.choose
[ -f /tmp/menu.choose ] && "`cat /tmp/menu.choose`"

