#!/bin/bash

cd ~
. ~/dotfiles/bin/dffunc

which trash 1>/dev/null 2>&1 &&:
if [ $? -eq 0 ]; then
    trash_command=1
else
    trash_command=0
fi
junk()
{
    if [ "$trash_command" -eq 1 ]; then
        dfx trash "$1"
    else
        dfx mv "$1" "$DFBACKUP/"
    fi
}

cdf()
{
    if [ "$1" ]; then
        source="$HOME/dotfiles/$1"
        if [ ! "$2" ]; then
            dest="$HOME/$1"
        else
            dest="$HOME/${@:2}"
        fi
        if [ ! -d "$(dirname $dest)" ]; then
            dfx mkdir -p "$(dirname $dest)"
        fi
        if [ -e "$dest" -a ! -L "$dest" ]; then
            junk "$dest"
        fi
        dfx ln -sfnv "$source" "$dest"
    else
        dfout2 'cdf: arguments missing'
    fi
}

xmv()
{
    src="$1"
    dest="${@:2}"
    if [ "$src" = "" -o "$dest" = "" ]; then
        dfout2 'xmv: arguments missing'
    fi
    if [ ! -d "$dest" ] ; then
        dfx mkdir -p "$HOME/$dest"
    fi
    if [ "$src" -a "$dest" -a -d "$HOME/$src" ]; then
        if [ -d "$dest" ]; then
            : #dfx cp -Rvn "$HOME/$1" "$HOME/$2_$DFTIME" '&&:'
        else
            dfx cp -Rvn "$HOME/$src" "$HOME/$dest" '&&:'
        fi
        dfx rm -rf "$HOME/$src" '&&:'
    fi
}

grep "$HOME/dotfiles/list/deploy" -v -e '^#' -e '^$' > "$DFTMP/data"
while read i; do
    cdf "$(echo $i | awk '{print $1}')" "$(echo $i | cut -d ' ' -f 2-)"
done < "$DFTMP/data"

vboxln()
{
    if [ -d "$1" ]; then
        dfx ln -sfnv "$1" "$HOME/${i,,}"
        if [ -d "$1/Users/$WINUSER" ]; then
            dfx ln -sfnv "$1/Users/$WINUSER" "$HOME/${i,,}u"
        fi
    fi
}

[ "$WINUSER" = "" ] && WINUSER=$USER
dmesg | grep VirtualBox 1>/dev/null 2>&1 &&:
vbox=$?
dmesg | grep VMware 1>/dev/null 2>&1 &&:
vmware=$?

if [ $vbox -eq 0 -o $vmware -eq 0 ]; then
    for i in {a..z}; do
        vboxln "/media/sf_${i,,}_DRIVE"
        vboxln "/media/sf_${i^^}_DRIVE"
        vboxln "/media/${i,,}"
        vboxln "/media/${i^^}"
    done
    [ -d /media/sf_VBoxShare ] && dfx ln -sfnv /media/sf_VBoxShare "$HOME/vs"
    [ -d /media/Share ] &&        dfx ln -sfnv /media/Share "$HOME/vs"
fi

if [ -e "$HOME/.config/dconf" ]; then
    xmv デスクトップ Desktop
    xmv ダウンロード Downloads
    xmv テンプレート Templates
    xmv 公開 Public
    xmv ドキュメント Documents
    xmv ミュージック Music
    xmv 音楽 Music
    xmv ピクチャ Pictures
    xmv 画像 Pictures
    xmv ビデオ Videos
    dfx mkdir -p ~/Mail/Gmail
    dfx mkdir -p ~/Mail/a
    dfx mkdir -p ~/Applications
    dfx mkdir -p ~/bin
fi

which zsh >/dev/null 2>&1 && existszsh=1

if [ "$existszsh" ]; then
    if id | grep sudo; then
        dfx sudo chsh "$(whoami)" -s /bin/zsh
    fi
    dfx zsh -c 'zcompile ~/.zshrc'
fi
dfx . ~/dotfiles/.zprofile
dfx . ~/dotfiles/.zsh_aliases '&&:'
dfx rm -rf ~/.zcompdump
[ "$existszsh" ] && dfx zsh -c 'source ~/.zshrc' '&&:'

# ssh
sshstr()
{
    sshconf()
    {
        dfx mkdir -p "$HOME/.ssh"
        dfx echo -e "Host $1\n\tStrictHostKeyChecking no\n" '>>' "$HOME/.ssh/config"
    }
    if [ -f "$HOME/.ssh/config" ]; then
        cat "$HOME/.ssh/config" | tr '\n' ' ' | \
            grep -i 'Host '"$1"'\s*StrictHostKeyChecking no' >/dev/null &&:
        if [ $? -ne 0 ]; then
            sshconf "$1"
        fi
    else
        sshconf "$1"
    fi
    dfx chmod 700 "$HOME/.ssh"
    dfx chmod 600 "$HOME/.ssh/config"
    dfx chmod go-w "$HOME"
}

sshstr 'github.com'
sshstr 'bitbucket.org'
sshstr 'git.noyuno.jp'

if [ ! -d "$HOME/.emacs.d" ]; then
    dfx git clone --depth 1 -b master https://github.com/syl20bnr/spacemacs $HOME/.emacs.d
fi

if [ ! -d "$HOME/.themes/Equilux" ]; then
    dfx curl -sL s3.noyuno.jp/static/Equilux.tar.xz | tar xJf - -C "$HOME/.themes"
fi

dfout2 "Deployed dotfiles. Restart applications."

finalize dfdeploy

