#!/bin/bash -e

help()
{
    {
        name=${0##*/}
        cat << EOF
Usage: $name [-d] [get|store|erase]

-d: base directory
EOF
    } 1>&2
    exit 1
}

base=$HOME/.password-store/git
gpgid=$HOME/.password-store/.gpg-id
mkdir -p "$base"
declare -A arr

req () {
    while read line; do
        if [ "$line" = "" ]; then
            break
        fi
        key=$(echo $line | awk -F= '{print $1}')
        value=$(echo $line | awk -F= '{print $2}')
        arr[$key]=$value
    done
    if [ "${arr["host"]}" = "" ]; then
        echo "requires host" >&2
        exit 1
    fi
}

get() {
    file=$base/${arr[host]}.gpg
    if [ -e "$file" ]; then
        gpg -d "$file"
    else
        # not found, do not anything
        exit 1
    fi
}

store () {
    file=$base/${arr[host]}.gpg
    if [ -f $gpgid ]; then
        mail=$(cat $gpgid)
    else
        echo "$gpgid not found. Please write email address to it." >&2
        exit 1
    fi

    if [ "${arr[username]}" = "" -o "${arr[password]}" = "" ]; then
        echo "requires username, password" >&2
        exit 1
    fi
    data="username=${arr[username]}
password=${arr[password]}"
    exists=0
    if [ -f $file ]; then
        exists=1
        g="$(gpg2 -d $file)"
        if [ -e "$file" -a "$g" = "$data" ]; then
            #echo "already latest password" >&2
            exit 1
        fi
    fi
    #echo "writing new password" >&2
    echo -en "$data" | gpg2 --yes -e -r "$mail" -o "$file"

    # git integration
    pushd "$base" >/dev/null
        if git status >/dev/null 2>&1; then
            groot=$(git rev-parse --show-toplevel)
            pushd "$groot" >/dev/null
                path=$(echo "$file" | sed "s|^$groot/||")
                commitmessage="Add $path by git-credential-pass"
                if [ $exists -eq 1 ]; then
                    commitmessage="Update $path by git-credential-pass"
                fi
                git add "$path"
                git commit -m "$commitmessage"
            popd >/dev/null
        fi
    popd >/dev/null
}

erase () {
    :
    # do not anything
}

args=$(getopt -u -o d:g:h --long help -- $*)
set -- $args
while [ $# -gt 0 ]; do 
    case $1 in 
    --) shift; break ;;
    -d) shift; base=$1 ;;
    -g) shift; gpgid=$1 ;;
    -h|--help) help ;;
    esac
    shift
done
g=
if [ $# -eq 0 ]; then
    echo "requires command">&2
    exit 1
fi
case $1 in
get|store|erase)   g=$1 ;;
*)     echo "unknown command: $1">&2; exit 1 ;;
esac

req
$g

