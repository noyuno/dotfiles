#!/bin/bash -e

help()
{
    {
        name=${0##*/}
        cat << EOF
Usage: $name [-d] [get|store|erase]

-d: base directory
EOF
    } 1>&2
    exit 1
}

base=$HOME/.password-store/git
mkdir -p "$base"
declare -A arr

req () {
    while read line; do
        if [ "$line" = "" ]; then
            break
        fi
        key=$(echo $line | awk -F= '{print $1}')
        value=$(echo $line | awk -F= '{print $2}')
        arr[$key]=$value
    done
    if [ "${arr["host"]}" = "" ]; then
        echo "requires host" >&2
        exit 1
    fi
}

get() {
    file=$base/${arr[host]}.gpg
    if [ -e "$file" ]; then
        gpg -d "$file" | tee /tmp/test
    else
        # not found, do not anything
        exit 1
    fi
}

store () {
    file=$base/${arr[host]}.gpg
    if [ "${arr[username]}" = "" -o "${arr[password]}" = "" ]; then
        echo "requires username and password" >&2
        exit 1
    fi
    mail=$(gpg2 --list-secret-keys|grep \< --color=no | sed -e 's/^.* <//' -e 's/>$//'|head -n 1)
    echo -e "username=${arr[username]}\npassword=${arr[password]}" | \
        gpg --yes -e -r "$mail" -o "$file"
}

erase () {
    file=$base/${arr[host]}.gpg
    if [ -e "$file" ]; then
        rm "$file"
    else
        echo "not found">&2
        exit 1
    fi
}

args=$(getopt -u -o d:h --long help -- $*)
set -- $args
while [ $# -gt 0 ]; do 
    case $1 in 
    --) shift; break ;;
    -d) shift; base=$1 ;;
    -h|--help) help ;;
    esac
    shift
done
g=
if [ $# -eq 0 ]; then
    echo "requires command">&2
    exit 1
fi
case $1 in
get|store|erase)   g=$1 ;;
*)     echo "unknown command: $1">&2; exit 1 ;;
esac

req
$g

