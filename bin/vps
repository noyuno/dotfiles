#!/bin/bash -e

. $HOME/dotfiles/bin/dffunc

declare rootdomain=noyuno.jp
case "$(hostname -f)" in
    k.*)
        declare host=$(hostname -f | awk -F. '{print $1}')
        declare certdomain="
            -d $rootdomain
            -d dir.$rootdomain
            -d git.$rootdomain
            -d git1.$rootdomain
            -d git2.$rootdomain
            -d pigit.$rootdomain
            -d pistatus.$rootdomain
            -d www.$rootdomain
            -d mail.$rootdomain
            -d v.$rootdomain
            -d k.$rootdomain
            -d mc.$rootdomain
            -d vps.$rootdomain
            -d pi.$rootdomain
            -d s.$rootdomain
        "
        declare certdir="
            location ^~ /.well-known/acme-challenge/ {
                root /var/www/cert/;
            }
        "
        ;;
    v.*)
        declare host=$(hostname -f | awk -F. '{print $1}')
        declare certdir="
            location ~ /.well-known/acme-challenge/ {
                proxy_pass http://$rootdomain:80;
            }
        "
        ;;
    *)
        echo "server only command" 1>&2
        exit 1
esac

declare user=noyuno
declare domain=$host.noyuno.jp
declare rootdomain_endpoint=1
declare gitdomain=git.$rootdomain
declare mail=noyuno@$domain
declare pdata=/var/postgresql/data
declare base=server
declare gittarget=/var/git
declare gituser=git
declare distribution=ubuntu
declare codename=bionic
declare leno=$(cat /home/noyuno/dotfiles/server/letsencrypt-no)
if [ "$leno" != "" ]; then
    leno=$rootdomain-$leno
else
    leno=$rootdomain
fi
declare package=(oracle-java8-installer nginx fcgiwrap postgresql etckeeper \
        letsencrypt python-certbot-nginx certbot glances zsh trash-cli \
        silversearcher-ag jq tig python3-pip npm)
declare certfile="
    ssl_certificate /etc/letsencrypt/live/$leno/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$leno/privkey.pem;
"
declare upgrade="
    $certdir
    location / {
        return 301 https://\$host\$request_uri;
    }
"
declare usage=

. $HOME/dotfiles/$base/general.sh
. $HOME/dotfiles/$base/gitbucket.sh
. $HOME/dotfiles/$base/netdata.sh
. $HOME/dotfiles/$base/nginx.sh
. $HOME/dotfiles/$base/vuls.sh
. $HOME/dotfiles/$base/nodejs.sh
. $HOME/dotfiles/$base/python.sh
. $HOME/dotfiles/$base/systemd.sh
. $HOME/dotfiles/$base/mail.sh
. $HOME/dotfiles/$base/slack.sh
. $HOME/dotfiles/$base/owncloud.sh
. $HOME/dotfiles/$base/backup.sh
. $HOME/dotfiles/$base/pleroma.sh
. $HOME/dotfiles/$base/cert.sh
. $HOME/dotfiles/$base/unbound.sh
. $HOME/dotfiles/$base/minecraft.sh
. $HOME/dotfiles/$base/anime.sh

nginx_all() {
    sudo rm -f \
        /etc/nginx/sites-enabled/00-root.conf \
        /etc/nginx/sites-enabled/gitbucket.conf \
        /etc/nginx/sites-enabled/70-owncloud.conf \
        /etc/nginx/sites-enabled/kanboard.conf \
        /etc/nginx/sites-enabled/netdata.conf \
        /etc/nginx/sites-enabled/pleroma.conf \
        /etc/nginx/sites-enabled/showterm.conf
    nginx
    pleroma_nginx
    owncloud_nginx
    gitbucket_nginx
}

help()
{
    cat << EOF
vps: VPS tools
$usage
EOF
    exit 1
}

if [ $# -eq 0 ]; then
    help
fi

if [ "$1" = "install" ]; then
    ainstall
    motd
    timezone
    ssl
    nginx
    psql
    gitbucket_psql
    gitbucket
    gitbucket_nginx
else
    eval $*
fi

