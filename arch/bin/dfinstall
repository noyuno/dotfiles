#!/bin/bash -e
. ~/dotfiles/bin/dffunc


isetup()
{
    if ! grep archlinuxfr < /etc/pacman.conf ; then
        cat << "EOF" | sudo tee -a /etc/pacman.conf
[archlinuxfr]
SigLevel = Optional
Server = http://repo.archlinux.fr/$arch
EOF
    fi
    dfx sudo pacman -Syu --noconfirm
    dfx sudo pacman -S yaourt --noconfirm
}

ikey()
{
    if [ $# -eq 0 ]; then
        t=5
    elif [ $1 -gt 300 ]; then
        return 1
    else
        t=$1
        dfout2 "retrying pacman-key --refresh (t=$t)"
        sleep $t
    fi
    dfx sudo pacman-key --refresh &&:
    if [ $? -ne 0 ]; then
        ikey $((t * 2)) &&:
        return $?
    fi
    return 0
}

iyaourt()
{
    if ! which yaourt 1>/dev/null 2>&1; then
        echo "yaourt has not installed. Please type dfyaourt to install it."
        exit 1
    fi
    dfx sudo pacman -Syu --noconfirm
    grep "$HOME/dotfiles/arch/list/dfinstall" -v -e '^#' -e '^$' > "$DFTMP/data"
    packages=()
    while read i; do
        packages=(${packages[@]} $i)
    done < "$DFTMP/data"
    dfx yaourt -S --noconfirm ${packages[@]}
}

iudisks() {
    cat << EOF | sudo tee /etc/udev/rules.d/99-udisks2.rules
ENV{ID_FS_USAGE}=="filesystem|other|crypto", ENV{UDISKS_FILESYSTEM_SHARED}="1"
EOF
    dfx sudo mkdir -p /media
}

igopackages()
{
    export GOPATH=$HOME/go
    dfx go get github.com/atsaki/termeter/cmd/termeter \
               github.com/walle/wiki/cmd/wiki \
               github.com/direnv/direnv \
               github.com/nsf/gocode \
               github.com/pocke/xrandr-mirror
}

ipip()
{
    # system
    packages=()
    grep "$HOME/dotfiles/list/pip-system" -v -e '^#' -e '^$' > "$DFTMP/data"
    while read i; do
        packages=(${packages[@]} $i)
    done < "$DFTMP/data"
    dfx sudo -H pip3 install ${packages[@]}
    dfx sudo -H pip2 install neovim
    # user
    packages=()
    grep "$HOME/dotfiles/list/pip" -v -e '^#' -e '^$' > "$DFTMP/data"
    while read i; do
        packages=(${packages[@]} $i)
    done < "$DFTMP/data"
    set +e
    dfx pip3 install --user ${packages[@]}
    # patch
    [ -f "$HOME/.local/lib/python3.5/site-packages/freetype/__init__.py" ] && \
        dfx patch -u "$HOME/.local/lib/python3.5/site-packages/freetype/__init__.py" \
            < "$HOME/dotfiles/patch/freetype-py/__init__.py.patch"
    set -e
}

igem()
{
    dfx gem install --user-install neovim github-pages tmuxinator
}

itrans()
{
    dfx mkdir -p "$HOME/bin"
    dfx curl -sL git.io/trans -o "$HOME/bin/trans"
    dfx chmod +x "$HOME/bin/trans"
}

help()
{
    (
    cat << EOF
dfinstall [commands...]
Install CLI packages.
Install all packages by default.

commands:
    key
    setup
    yaourt
    gopackages
    pip
    trans
    gem
EOF
    ) >&2
    exit 1
}

run()
{
    dfout2 "dfinstall: $1"
    eval "$1"
}

if [ $# -eq 0 ] ;then
    run isetup
    run ikey &&:
    run iyaourt
    run iudisks
    run igopackages
    run ipip
    run itrans
    run igem
elif [ "$1" = help ]; then
    help
else
    while [ $# -gt 0 ]; do
        run "i$1"
        shift
    done
fi

