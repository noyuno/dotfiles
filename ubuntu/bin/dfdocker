#!/bin/bash -e

ver=""
file=""
name=${0##*/}
quiet=""

help()
{
    {
        cat << EOF
$name: dotfiles docker tool
$name -b|-r|-c| [-v version] [-f dockerfile]
-b|--build: Build container. Required -v and -f.
-r|--run: Run container. Required -v.
-c|--copy: Copy modified local dotfiles into running container.
-q|--quiet: Quiet.

Examples:
  1. Build and run dotfiles container
    $name -br -v base -f Dockerfile-base
    $name -br -v 0.1 -f Dockerfile
  2. When modified local dotfiles, copy them into running container using other terminal.
    $name -c
EOF
    } 1>&2
    exit 1
}

build()
{
    [ -z $ver ] && echo 'require version option' 1>&2 && exit 1
    [ -z $file ] && echo 'require file option' 1>&2 && exit 1
    docker build -f "$file" -t "dotfiles:$ver" --build-arg "QUIET=$quiet" $* .
}

run()
{
    [ -z $ver ] && echo 'require version option' 1>&2 && exit 1
    docker run -it --rm -e DISPLAY="$DISPLAY" \
        -v /tmp/.X11-unix:/tmp/.X11-unix "dotfiles:$ver"
}

copy()
{
    container="$(docker ps -q | head -n 1)" 
    if [ "$container" ]; then
        docker cp "$HOME/dotfiles" "$container:/home/tu/"
        docker exec -itu root "$container" chown -R tu:tu /home/tu/dotfiles
        echo "copied to $container"
    else
        echo "unable to find running container" 1>&2
        exit 1
    fi
}

args=$(getopt -u -n $name -o brciv:f:hq \
    -l build,run,copy,install,version:,file:,help,quiet -- $*)
set -- $args
while [ $# -gt 0 ]; do 
    case $1 in 
    --) shift; break ;;
    --build|-b) fbuild=1 ;;
    --run|-r) frun=1 ;;
    --copy|-c) fcopy=1 ;;
    --version|-v) ver=$2; shift ;;
    --file|-f) file=$2; shift ;;
    --help|-h) help ;;
    --quiet|-q) quiet=1 ;;
    esac
    shift
done

accept=0
[ $fbuild ] && accept=1 && build $*
[ $frun ] && accept=1 && run $*
[ $fcopy ] && accept=1 && copy $*

[ $accept -eq 0 ] && help

